from flask import Flask, request
import requests
import os
import base64
from dotenv import load_dotenv
from openai import OpenAI

load_dotenv()
app = Flask(__name__)

VERIFY_TOKEN = os.getenv("VERIFY_TOKEN")
WHATSAPP_TOKEN = os.getenv("WHATSAPP_TOKEN")
WHATSAPP_PHONE_ID = os.getenv("WHATSAPP_PHONE_ID")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
OWNER_NUMBER = os.getenv("OWNER_NUMBER", "77089537431")

client = OpenAI(api_key=OPENAI_API_KEY)

# ====== –ü–∞–º—è—Ç—å —Å–µ—Å—Å–∏–π ======
sessions = {}              # {phone: [{"role": "...", "content": "..."}]}
notified_clients = set()
MAX_TURNS = 16             # –æ–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –Ω–µ —Ä–∞—Å–ø–æ–ª–∑–∞–ª–∞—Å—å
STRICT_MODE = True         # –≤–∫–ª—é—á–µ–Ω off-topic —Å—Ç–æ—Ä–æ–∂

# ====== –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π (short) ======
ISTE_AI_KNOWLEDGE = """
üè¢ ISTE AI ‚Äî –ò–ò-—Ä–µ—à–µ–Ω–∏—è –ø–æ–¥ –∫–ª—é—á –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ
–§–æ–∫—É—Å: —Ç–æ–ª—å–∫–æ –ø—Ä–∏–∫–ª–∞–¥–Ω–æ–π –ò–ò –¥–ª—è –∫–æ–º–ø–∞–Ω–∏–π –†–ö. –Ø–∑—ã–∫–∏: KK/RU/EN. –¢–æ–Ω: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ –¥–µ–ª–æ–≤–æ–π.

–ß—Ç–æ –¥–µ–ª–∞–µ–º:
‚Ä¢ üîπ –ò–ò-–∞–≥–µ–Ω—Ç—ã (–º–µ–Ω–µ–¥–∂–µ—Ä—ã –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º/–ø–æ–¥–¥–µ—Ä–∂–∫–µ, —Ä–µ–∫—Ä—É—Ç–µ—Ä—ã, —á–∞—Ç-–±–æ—Ç—ã)
‚Ä¢ üîπ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM/—É—á—ë—Ç–æ–º (amoCRM, Bitrix24, 1C, Google Sheets, Webhooks)
‚Ä¢ üîπ –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª ¬´–ø–æ–¥ –∫–ª—é—á¬ª: –∞—É–¥–∏—Ç ‚Üí –ø–∏–ª–æ—Ç 1‚Äì2 –Ω–µ–¥–µ–ª–∏ ‚Üí –ø—Ä–æ–¥ ‚Üí –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏–Ω—Ü–∏–ø—ã:
‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø–æ–¥ –Ω–∏—à—É –∏ KPI
‚Ä¢ –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ NDA, –¥–æ—Å—Ç—É–ø—ã –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ
‚Ä¢ –ò–∑–º–µ—Ä–∏–º–æ—Å—Ç—å: —Ü–µ–ª–∏, –º–µ—Ç—Ä–∏–∫–∏, –æ—Ç—á—ë—Ç—ã

üìä –ü—Ä–∞–π—Å-–ª–∏—Å—Ç (–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ):
‚Ä¢ üí¨ WhatsApp-–±–æ—Ç ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 100 000 ‚Ç∏, –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: 10 000 ‚Ç∏  
‚Ä¢ üì© Telegram-–±–æ—Ç ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 80 000 ‚Ç∏, –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: 8 000 ‚Ç∏  
‚Ä¢ üì∑ Instagram-–±–æ—Ç ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: 100 000 ‚Ç∏, –µ–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞: 10 000 ‚Ç∏  

–ö–æ–º—É: —Å–µ—Ä–≤–∏—Å—ã, e-commerce, –∫–ª–∏–Ω–∏–∫–∏ (–±–µ–∑ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏), –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å, b2b-—É—Å–ª—É–≥–∏ ‚Äî **–Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞**.

–¶–µ–Ω–Ω–æ—Å—Ç—å:
‚Ä¢ ‚àí20‚Äì40% –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤, 24/7 –æ–±—Ä–∞–±–æ—Ç–∫–∞
‚Ä¢ +15‚Äì30% –∫–æ–Ω–≤–µ—Ä—Å–∏—è –∏–∑ –æ–±—Ä–∞—â–µ–Ω–∏–π –≤ –∑–∞—è–≤–∫–∏/–±—Ä–æ–Ω—å
‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞—Ö (<1 —Å), —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ø–æ–¥ —Ç—Ä–∞—Ñ–∏–∫

–°–±–æ—Ä –ª–∏–¥–∞ (–∫–æ—Ä–æ—Ç–∫–æ, –ø–æ –æ—á–µ—Ä–µ–¥–∏):
–ò–º—è / –ö–æ–º–ø–∞–Ω–∏—è / –ì–æ—Ä–æ–¥ (–≤ –†–ö) / –ù–∏—à–∞ ‚Üí –¶–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ ‚Üí –ö–∞–Ω–∞–ª (WhatsApp/Telegram/–≤–µ–±/–≥–æ–ª–æ—Å) ‚Üí
CRM (amo/Bitrix/1C/–Ω–µ—Ç) ‚Üí –°—Ä–æ–∫ –∑–∞–ø—É—Å–∫–∞ ‚Üí –ë—é–¥–∂–µ—Ç (–≤–∏–ª–∫–∞) ‚Üí –ö–æ–Ω—Ç–∞–∫—Ç (WhatsApp/—Ç–µ–ª–µ–≥–∞/email).

–≠—Å–∫–∞–ª–∞—Ü–∏—è –≤–ª–∞–¥–µ–ª—å—Ü—É: –µ—Å–ª–∏ ¬´–≥–æ—Ç–æ–≤ —Å–æ–∑–≤–æ–Ω¬ª, –µ—Å—Ç—å –±—é–¥–∂–µ—Ç/—Å—Ä–æ–∫ ¬´ASAP¬ª, –±–æ–ª—å—à–æ–π —Ç—Ä–∞—Ñ–∏–∫, VIP.
–ü–æ–ª–∏—Ç–∏–∫–∏: –Ω–µ –¥–∞—ë–º –º–µ–¥/—é—Ä–∏–¥. —Å–æ–≤–µ—Ç–æ–≤; –Ω–µ –¥–µ–ª–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –±–∏–∑–Ω–µ—Å-–∫–µ–π—Å–æ–≤ –†–ö; –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–µ ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ NDA.
–ö–æ–Ω—Ç–∞–∫—Ç—ã: iste-ai.kz | WhatsApp: +7 708 953 74 31.
"""


# ====== –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç (—Å—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞ —Ç–µ–º–∞—Ç–∏–∫–∏) ======
SYSTEM_RULES = """
–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç ISTE AI. –û—Ç–≤–µ—á–∞–π –Ω–∞ —è–∑—ã–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ (KK/RU/EN).
–°—Ç—Ä–æ–≥–æ –¥–µ—Ä–∂–∏—Å—å —Ç–µ–º:
‚Äî –ò–ò-—Ä–µ—à–µ–Ω–∏—è ¬´–ø–æ–¥ –∫–ª—é—á¬ª –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ
‚Äî –ò–ò-–∞–≥–µ–Ω—Ç—ã (–º–µ–Ω–µ–¥–∂–µ—Ä—ã, —Ä–µ–∫—Ä—É—Ç–µ—Ä—ã, –±–æ—Ç—ã), –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å CRM/—É—á—ë—Ç–æ–º
‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –ø—Ä–æ—Ü–µ—Å—Å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è, —Å—Ä–æ–∫–∏, –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ä–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
‚Äî –ì–µ–æ–≥—Ä–∞—Ñ–∏—è: –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω (–µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –∏–∑ –¥—Ä—É–≥–æ–π —Å—Ç—Ä–∞–Ω—ã ‚Äî –≤–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏, —á—Ç–æ —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ –†–ö)

–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –≤–Ω–µ —Ç–µ–º–∞—Ç–∏–∫–∏ (–ª–∏—á–Ω—ã–µ —Ç–µ–º—ã, —É—á–µ–±–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, —Ñ–∏–Ω—Ä—ã–Ω–∫–∏, –±—ã—Ç–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∑–∞–∫–∞–∑ –∏ —Ç.–ø.)
–∏–ª–∏ –≤–Ω–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏ (–∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –†–ö) ‚Äî –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –∏ –º—è–≥–∫–æ –≤–µ—Ä–Ω–∏ –∫ –Ω–∞—à–∏–º —É—Å–ª—É–≥–∞–º –≤ –†–ö:
¬´–ü–æ—Ö–æ–∂–µ, —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –Ω–∞—à–µ–π —Å—Ñ–µ—Ä–µ üôÇ –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –ò–ò-—Ä–µ—à–µ–Ω–∏—è–º–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–µ. –ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ ‚Äî WhatsApp/Telegram/Instagram –±–æ—Ç—ã –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤?

–ë“±–ª —Å“±—Ä–∞“õ –±—ñ–∑–¥—ñ“£ “õ—ã–∑–º–µ—Ç —Å–∞–ª–∞–º—ã–∑“ì–∞ –∂–∞—Ç–ø–∞–π—Ç—ã–Ω —Å–∏—è“õ—Ç—ã üôÇ –ë—ñ–∑ “ö–∞–∑–∞“õ—Å—Ç–∞–Ω–¥–∞“ì—ã –±–∏–∑–Ω–µ—Å–∫–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –ñ–ò-—à–µ—à—ñ–º–¥–µ—Ä–º–µ–Ω –∞–π–Ω–∞–ª—ã—Å–∞–º—ã–∑. “ö–∞–π –±–∞“ì—ã—Ç —Å—ñ–∑–¥—ñ “õ—ã–∑—ã“õ—Ç—ã—Ä–∞–¥—ã ‚Äî WhatsApp/Telegram/Instagram –±–æ—Ç—Ç–∞—Ä—ã –º–∞, ”ô–ª–¥–µ –ø—Ä–æ—Ü–µ—Å—Ç–µ—Ä–¥—ñ –∞–≤—Ç–æ–º–∞—Ç—Ç–∞–Ω–¥—ã—Ä—É –º–∞?¬ª

–í—Å–µ–≥–¥–∞ —Å–æ–±–µ—Ä–∏ –∫—Ä–∞—Ç–∫–∏–π –±—Ä–∏—Ñ (–ò–º—è/–ö–æ–º–ø–∞–Ω–∏—è/–ì–æ—Ä–æ–¥ –≤ –†–ö/–ù–∏—à–∞/–¶–µ–ª—å/–ö–∞–Ω–∞–ª/CRM/–°—Ä–æ–∫/–ë—é–¥–∂–µ—Ç/–ö–æ–Ω—Ç–∞–∫—Ç) –∑–∞ 1‚Äì3 —É—Ç–æ—á–Ω–µ–Ω–∏—è.
–ü–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–æ, –ø–æ –¥–µ–ª—É, 1 —è–≤–Ω—ã–π CTA (–ø—Ä–µ–¥–ª–æ–∂–∏ –º–∏–Ω–∏-–±—Ä–∏—Ñ –∏–ª–∏ —Å–æ–∑–≤–æ–Ω).
–ù–µ –≤—ã–¥–∞–≤–∞–π –º–µ–¥/—é—Ä–∏–¥ —Å–æ–≤–µ—Ç—ã –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –°–æ–±–ª—é–¥–∞–π NDA-—Ç–æ–Ω.
"""


# ====== –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ–º–∞—Ç–∏–∫–∏ (IN/OUT) ======
def is_in_scope(text: str) -> bool:
    if not STRICT_MODE:
        return True
    try:
        clf = client.chat.completions.create(
            model="gpt-5",
            max_completion_tokens=2,
            messages=[
                {
                    "role": "system",
                    "content": (
                        "Return only IN or OUT.\n"
                        "IN: message is about BUSINESS AI for companies in KAZAKHSTAN ‚Äî "
                        "AI agents (sales/support managers, recruiters, chatbots), CRM integrations, "
                        "automation, analytics, pricing, process, security, NDA, timelines.\n"
                        "OUT: personal/medical/legal advice, homework, general coding help, "
                        "consumer questions, topics not about business AI, or clearly outside Kazakhstan scope."
                    )
                },
                {"role": "user", "content": text[:1000]}
            ]
        )
        label = clf.choices[0].message.content.strip().upper()
        return label == "IN"
    except Exception:
        return True


# ====== –í–æ–∑–≤—Ä–∞—Ç –æ—Ñ—Ñ—Ç–æ–ø–∞ ======
OFFTOP_REPLY = (
    "–ü–æ—Ö–æ–∂–µ, –≤–æ–ø—Ä–æ—Å –≤–Ω–µ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥. –ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è –ò–ò –¥–ª—è –±–∏–∑–Ω–µ—Å–∞: "
    "—á–∞—Ç-–±–æ—Ç—ã WhatsApp/Telegram, –≥–æ–ª–æ—Å–æ–≤—ã–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—ã, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å amoCRM/Bitrix24/1C –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. "
    "–ü–æ–¥—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å ‚Äî —Å–±–æ—Ä –ª–∏–¥–æ–≤, –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, FAQ –∏–ª–∏ –ø—Ä–æ–¥–∞–∂–∏?"
)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±—Ö—É–∫–∞ ===
@app.route("/webhook", methods=["GET"])
def verify():
    mode = request.args.get("hub.mode")
    token = request.args.get("hub.verify_token")
    challenge = request.args.get("hub.challenge")
    if mode == "subscribe" and token == VERIFY_TOKEN:
        print("‚úÖ Webhook verified!")
        return challenge, 200
    return "Verification failed", 403

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@app.route("/webhook", methods=["POST"])
def webhook():
    data = request.get_json()
    print("üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:", data)

    try:
        value = data["entry"][0]["changes"][0]["value"]
        messages_in = value.get("messages", [])
        if not messages_in:
            return "ok", 200

        message = messages_in[0]
        phone_number = message["from"]
        msg_type = message.get("type")
        contact = value.get("contacts", [{}])[0]
        client_name = contact.get("profile", {}).get("name", "–ë–µ–∑ –∏–º–µ–Ω–∏")

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ + –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –Ω–æ—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
        if phone_number not in sessions:
            sessions[phone_number] = []
            if phone_number not in notified_clients:
                notify_owner(phone_number, client_name)
                notified_clients.add(phone_number)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        user_message = ""
        if msg_type == "text":
            user_message = message["text"]["body"]

        elif msg_type == "audio":  # üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            audio_id = message["audio"]["id"]
            user_message = transcribe_audio(audio_id)

        elif msg_type == "image":  # üñº –§–æ—Ç–æ
            image_id = message["image"]["id"]
            # –ö–∞—Ä—Ç–∏–Ω–∫–∏ –æ–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ø–æ —Ç–µ–º–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ö–µ–º–∞/—Å–∫—Ä–∏–Ω CRM)
            img_desc = describe_image(image_id)
            user_message = f"[image]\n{img_desc}"

        else:
            user_message = "–ú–µ–Ω ”ô–∑—ñ—Ä–≥–µ –±“±–ª —Ñ–æ—Ä–º–∞—Ç—Ç–∞“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä–¥—ã “õ–∞–±—ã–ª–¥–∞–π –∞–ª–º–∞–π–º—ã–Ω üôÇ"

        # Off-topic —Ñ–∏–ª—å—Ç—Ä
        if not is_in_scope(user_message):
            send_whatsapp_message(phone_number, OFFTOP_REPLY)
            return "ok", 200

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –∏ –æ–±—Ä–µ–∑–∞–µ–º –¥–æ MAX_TURNS*2 —Å–æ–æ–±—â–µ–Ω–∏–π
        sessions[phone_number].append({"role": "user", "content": user_message})
        if len(sessions[phone_number]) > MAX_TURNS * 2:
            sessions[phone_number] = sessions[phone_number][-MAX_TURNS * 2:]

        # === –û—Ç–≤–µ—Ç –æ—Ç AI ===
        messages = [
            {"role": "system", "content": SYSTEM_RULES},
            {"role": "system", "content": ISTE_AI_KNOWLEDGE},
        ] + sessions[phone_number]

        ai_response = client.chat.completions.create(
            model="gpt-5",
            messages=messages,   # –Ω–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ ¬´–±–µ–∑ –ø—Ä—ã–∂–∫–æ–≤¬ª
            max_completion_tokens=450
        )

        reply = ai_response.choices[0].message.content.strip()

        # –¢—Ä–∏–≥–≥–µ—Ä—ã —ç—Å–∫–∞–ª–∞—Ü–∏–∏ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —ç–≤—Ä–∏—Å—Ç–∏–∫–∏)
        hot_flags = ["—Å–æ–∑–≤–æ–Ω", "–∑–≤–æ–Ω–æ–∫", "call", "—Å–µ–≥–æ–¥–Ω—è", "asap", "–±—é–¥–∂–µ—Ç", "—Å–º–µ—Ç–∞", "—Ü–µ–Ω–∞", "—Å—Ç–æ–∏–º–æ—Å—Ç—å"]
        if any(flag.lower() in (user_message.lower() + " " + reply.lower()) for flag in hot_flags):
            # –ö–æ—Ä–æ—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –≤–ª–∞–¥–µ–ª—å—Ü—É
            notify_owner(
                client_number=phone_number,
                client_name=client_name
            )

        sessions[phone_number].append({"role": "assistant", "content": reply})
        send_whatsapp_message(phone_number, reply)

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)

    return "ok", 200

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ WhatsApp ===
def send_whatsapp_message(to, message):
    body = ("" if message is None else str(message)).strip() or "‚Ä¶"  # –Ω–µ –ø—É—Å—Ç–∏–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É

    url = f"https://graph.facebook.com/v24.0/{WHATSAPP_PHONE_ID}/messages"
    headers = {
        "Authorization": f"Bearer {WHATSAPP_TOKEN}",
        "Content-Type": "application/json; charset=UTF-8",
        "Accept": "application/json"
    }
    payload = {
        "messaging_product": "whatsapp",
        "to": to,
        "type": "text",
        "text": {"body": body[:4000], "preview_url": False}
    }
    try:
        r = requests.post(url, headers=headers, json=payload, timeout=30)
        print("üì§ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω:", r.status_code, r.text[:500])
        r.raise_for_status()
    except Exception as e:
        print("‚ùå Send message error:", e)



# === –ì–æ–ª–æ—Å –≤ —Ç–µ–∫—Å—Ç (Whisper) ===
def transcribe_audio(media_id):
    import uuid, os
    file_path = None
    try:
        audio_url = get_media_url(media_id)
        resp = requests.get(audio_url, headers={"Authorization": f"Bearer {WHATSAPP_TOKEN}"}, timeout=30)
        resp.raise_for_status()
        file_path = f"voice_{uuid.uuid4().hex}.ogg"
        with open(file_path, "wb") as f:
            f.write(resp.content)
        with open(file_path, "rb") as audio_file:
            transcript = client.audio.transcriptions.create(model="whisper-1", file=audio_file)
        return transcript.text
    except Exception:
        return "–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, –∞—É–¥–∏–æ–Ω—ã —Ç–∞–Ω—É —Å”ô—Ç—Å—ñ–∑ –±–æ–ª–¥—ã. –ù–∞“õ—Ç—ã —Å“±—Ä–∞“õ—Ç—ã –º”ô—Ç—ñ–Ω–º–µ–Ω –∂–∞–∑—ã“£—ã–∑—à—ã?"
    finally:
        if file_path and os.path.exists(file_path):
            try: os.remove(file_path)
            except: pass


# === –û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ===
def describe_image(media_id):
    try:
        img_url = get_media_url(media_id)
        resp = requests.get(img_url, headers={"Authorization": f"Bearer {WHATSAPP_TOKEN}"}, timeout=30)
        resp.raise_for_status()
        mime = resp.headers.get("Content-Type", "image/jpeg") or "image/jpeg"
        if not mime.startswith("image/"):
            mime = "image/jpeg"
        b64 = base64.b64encode(resp.content).decode("utf-8")
        data_url = f"data:{mime};base64,{b64}"

        response = client.chat.completions.create(
            model="gpt-5",
            messages=[{
                "role": "user",
                "content": [
                    {"type": "text", "text": "–û–ø–∏—à–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ –∏ –¥–µ–ª–æ–≤—ã–º —Ç–æ–Ω–æ–º. –ï—Å–ª–∏ –Ω–µ —Å–≤—è–∑–∞–Ω–æ —Å –ò–ò/CRM/–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π ‚Äî –≤–µ–∂–ª–∏–≤–æ –æ—Ç–º–µ—Ç—å, —á—Ç–æ —ç—Ç–æ –≤–Ω–µ —Ç–µ–º—ã."},
                    {"type": "image_url", "image_url": {"url": data_url}}
                ]
            }],
            max_completion_tokens=150
        )
        return (response.choices[0].message.content or "").strip()
    except Exception as e:
        print("‚ùå Image describe error:", e)
        return "–°—É—Ä–µ—Ç –∂“Ø–∫—Ç–µ–ª–º–µ–¥—ñ. –°–∏–ø–∞—Ç—Ç–∞–º–∞–Ω—ã –º”ô—Ç—ñ–Ω–º–µ–Ω –∂—ñ–±–µ—Ä–µ –∞–ª–∞—Å—ã–∑ –±–∞?"



# === –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–µ–¥–∏–∞ ===
def get_media_url(media_id):
    url = f"https://graph.facebook.com/v24.0/{media_id}"
    headers = {"Authorization": f"Bearer {WHATSAPP_TOKEN}"}
    res = requests.get(url, headers=headers)
    res.raise_for_status()
    return res.json()["url"]

# === –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –æ –Ω–æ–≤–æ–º –∫–ª–∏–µ–Ω—Ç–µ/—ç—Å–∫–∞–ª–∞—Ü–∏–∏ ===
def notify_owner(client_number, client_name):
    text = (
        "üì¢ *–ù–æ–≤—ã–π/–≥–æ—Ä—è—á–∏–π –∫–ª–∏–µ–Ω—Ç*\n\n"
        f"üë§ –ò–º—è: {client_name}\n"
        f"üì± –ù–æ–º–µ—Ä: +{client_number}\n"
        "üí¨ –ù–∞–ø–∏—Å–∞–ª(–∞) –≤ WhatsApp ISTE AI\n"
        "‚û°Ô∏è –ü—Ä–æ–≤–µ—Ä—å –¥–∏–∞–ª–æ–≥ –∏, –µ—Å–ª–∏ –≥–æ—Ä—è—á–∏–π –∑–∞–ø—Ä–æ—Å, —Å–≤—è–∂–∏—Å—å."
    )
    send_whatsapp_message(OWNER_NUMBER, text)

if __name__ == "__main__":
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)




